{"version":3,"sources":["components/Note.js","services/notes.js","Notification.js","Footer.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","class","content","onClick","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","Notification","message","className","Footer","style","color","fontStyle","fontSize","login","credentials","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","console","log","loginService","setItem","stringify","setTimeout","notesToShow","filter","addNote","noteObject","date","Date","toISOString","Math","random","returnedNote","concat","handleNoteChange","target","value","onSubmit","type","name","onChange","map","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88d0e2aa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li class=\"note\" >\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${token}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create =  async newObject => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n      }\r\n    \r\n      const response = await axios.post(baseUrl, newObject, config)\r\n      return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    setToken\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  export default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n  \r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n      </div>\r\n    )\r\n  }\r\n  export default Footer\r\n  ","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './Notification'\nimport Footer from './Footer'\nimport loginService from './services/login' \n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  \n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n\n  const noteForm = () => (\n    <form onSubmit={addNote}>\n      <input \n        value={newNote}\n        onChange={handleNoteChange}\n      />\n      <button type=\"submit\">save</button>\n    </form>\n  )\n  \n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n    console.log('notesToShow', notesToShow)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,   \n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })   \n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })   \n  }\n\n  const handleNoteChange = (event) => {\n    console.log('event', event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() : \n        <div>\n        <p>{user.name} logged in</p>\n        {noteForm()}\n      </div>\n      }     \n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n        <ul>\n          {notesToShow.map( note => \n           <Note \n            key={note.id} \n            note={note}\n            toggleImportance={()=> toggleImportanceOf(note.id) } \n            />\n          )}\n        </ul> \n        \n        <Footer />\n              \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}