{"version":3,"sources":["components/Note.js","components/Notification.js","components/LoginForm.js","components/NoteForm.js","components/Togglable.js","components/Footer.js","services/login.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","class","content","onClick","Notification","message","className","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","NoteForm","createNote","useState","newNote","setNewNote","event","preventDefault","Math","random","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","Footer","color","fontStyle","fontSize","login","credentials","a","axios","post","response","data","baseUrl","token","getAll","get","then","create","newObject","config","headers","Authorization","update","id","put","setToken","newToken","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","noteObject","noteFormRef","current","returnedNote","concat","notesToShow","filter","console","log","handleLogin","loginService","setItem","stringify","setTimeout","useRef","name","map","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d12b397e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li class=\"note\" >\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  export default Notification","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n   handleSubmit,\r\n   handleUsernameChange,\r\n   handlePasswordChange,\r\n   username,\r\n   password\r\n  }) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n      </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, {useState} from 'react' \r\n\r\nconst NoteForm = ({ createNote }) => {\r\n  const [newNote, setNewNote] = useState('') \r\n\r\n  const handleChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    createNote({\r\n      content: newNote,\r\n      important: Math.random() > 0.5,\r\n    })\r\n\r\n    setNewNote('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new note</h2>\r\n\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteForm","import React, { useState, useImperativeHandle  } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create =  async newObject => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n      }\r\n    \r\n      const response = await axios.post(baseUrl, newObject, config)\r\n      return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    setToken\r\n}","import React, {useState, useEffect, useRef} from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport NoteForm from './components/NoteForm'\nimport Togglable from './components/Togglable'\nimport Footer from './components/Footer'\nimport loginService from './services/login' \nimport noteService from './services/notes'\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n    \n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null) \n  \n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  \n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility()\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })   \n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n    console.log('notesToShow', notesToShow)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n  \n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const noteFormRef = useRef()\n\n  const noteForm = () => (\n    <Togglable buttonLabel='new note' ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  )\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() : \n        <div>\n        <p>{user.name} logged in</p>\n        {noteForm()}\n      </div>\n      }     \n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map( note => \n          <Note \n            key={note.id} \n            note={note}\n            toggleImportance={()=> toggleImportanceOf(note.id) } \n          />\n        )}\n      </ul> \n        \n        <Footer />              \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}